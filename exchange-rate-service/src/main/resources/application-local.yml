server:
  port: ${SERVER_PORT:8083}

spring:
  application:
    name: exchange-rate-service
  task:
    execution:
      pool:
        core-size: 5
        max-size: 20
        queue-capacity: 100
        keep-alive: 60s
      thread-name-prefix: "async-task-"
      shutdown:
        await-termination: true
        await-termination-period: 30s
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
          max-wait: -1ms
  cache:
    type: redis
    redis:
      time-to-live: 2s
      cache-null-values: false
      key-prefix: "fx:"
      use-key-prefix: true

exchange:
  api:
    url: ${EXCHANGE_API_URL:https://api.fxratesapi.com/latest}
  connect-timeout: 5s
  read-timeout: 30s
  client:
    max-attempts: 3
    backoff-delay-ms: 1000
    backoff-multiplier: 2.0
    max-delay-ms: 30000
    jitter-factor: 0.1
    circuit-breaker-enabled: true
    circuit-breaker-failure-threshold: 5
    circuit-breaker-timeout-ms: 60000
    rate-limit-status-code: 429
  user-agent:
    default: "Exchange-Rate-Service/1.0"

external-services:
  pool-size: 10
  timeout: 30s

management:
  endpoints:
    web:
      exposure:
        include: "health,info,metrics,prometheus"
  endpoint:
    health:
      show-details: when_authorized
    metrics:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true

resilience4j:
  retry:
    instances:
      exchange-rate-api:
        max-attempts: 3
        wait-duration: 1000ms
        exponential-backoff-multiplier: 2
        randomized-wait-factor: 0.5
  circuitbreaker:
    instances:
      exchange-rate-api:
        failure-rate-threshold: 50
        wait-duration-in-open-state: 30000ms
        sliding-window-size: 10
        minimum-number-of-calls: 5 